plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}

group = 'jp.cloudace.backend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudGcpVersion', "3.0.0")
	set('springCloudVersion', "2021.0.0")
}

dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.google.cloud:spring-cloud-gcp-starter-logging'

	annotationProcessor 'org.seasar.doma:doma-processor:2.52.0'
	implementation 'org.seasar.doma:doma-core:2.52.0'
	implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.6.0'

	// https://qiita.com/m_masashi/items/61700164e8aaa35481b3
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
}

// ↓↓↓↓↓ [DOMA] ↓↓↓↓↓
def domaResources = ['doma.compile.config', 'META-INF/**/*.sql', 'META-INF/**/*.script']
task copyDomaResources(type: Sync)  {
	//println 'SQL srcDirs'
	//println sourceSets.main.resources.srcDirs
	//println 'SQL destinationDir'
	//println compileJava.destinationDirectory
	from sourceSets.main.resources.srcDirs
	into compileJava.destinationDirectory
	include domaResources
}
processResources {
	exclude domaResources
}
compileJava {
	dependsOn copyDomaResources
	options.encoding = 'UTF-8'
}
// ↑↑↑↑↑ [DOMA] ↑↑↑↑↑

tasks.named('test') {
	useJUnitPlatform()
}
